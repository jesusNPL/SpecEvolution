setwd("..")
load("Data/spec_OH.RData")
#load("Data/spec_OH.RData")
dta4 <- as.data.frame(spec, fix_names = "none", metadata = FALSE)
View(dta4)
oaks <- dta4$sample_name
oaks
runPEcAnRTM <- function(specData, specRange = c(2:2102), sppNames,
nChains = 4, iters = 10000) {
library(PEcAnRTM)
### Inits
params <- c(
"N" = 1.4, "Cab" = 40, "Car" = 15,
"Cbrown" = 0.5, "Cw" = 0.002, "Cm" = 0.004
)
### PEcAnRTM paramenters
invert.options <- default.settings.prospect
invert.options$model
invert.options$n.tries <- 1      # Number of attempts
invert.options$nchains <- nChains      # Number of MCMC chains
invert.options$ngibbs <- iters    # Number of iterations per chain
invert.options$burnin <- iters/5    # Length of burnin period
invert.options$do.lsq.first <- TRUE # Initialize with results from a fast least-squares optimization algorithm
# Extra params
wls <- 400:2500
waves <- paste0("Wave_", wls)
traitMeans <- list()
traitMedians <- list()
for(i in 1:length(sppNames)) {
specTMP <- as.numeric(specData[i, ][specRange])
names(specTMP) <- waves
inversion.output <- PEcAnRTM::invert.auto(observed = specTMP,
invert.options = invert.options,
quiet = TRUE)
# Extract mean values
means.tmp <- unlist(inversion.output$results[grep("mu",
names(inversion.output$results))])[1:5]
means.tmp <- as.data.frame(means.tmp)
means.tmp$Species <- sppNames[i]
traitMeans[[i]] <- means.tmp
# Extract median values
median.tmp <- unlist(inversion.tmp$results[grep("med",
names(inversion.tmp$results))])[1:5]
median.tmp <- as.data.frame(median.tmp)
median.tmp$Species <- sppNames[i]
traitMedians[[i]] <- median.tmp
}
## Save trait means
traitMeans <- do.call(rbind, traitMeans)
## Save trait medians
traitMedians <- do.call(rbind, traitMedians)
results <- list(traitMeans, traitMedians)
return(results)
}
traitOH <- runPEcAnRTM(specData = dta4, specRange = c(2:2102),
sppNames = oaks, nChains = 4, iters = 5000)
dump.log$`runPEcAnRTM(specData = dta4, specRange = c(2:2102), sppNames = oaks, nChains = 4, ite`
dump.log$`logger.message("INFO", msg, ...)`
dump.log[[1]]
dump.log[[3]]
dump.log[[4]]
traitOH <- runPEcAnRTM(specData = dta4, specRange = c(2:2102),
sppNames = oaks, nChains = 4, iters = 5000)
specRange = c(2:2102)
specRange
traitOH <- runPEcAnRTM(specData = dta4, specRange = c(2:2102),
sppNames = oaks, nChains = 2, iters = 5000)
require(PEcAnRTM)
load("Documents/GitHub/SpecEvolution/Data/test_alba.RData")
load("~/Documents/GitHub/SpecEvolution/Data/test_alba.RData")
wls <- 400:2500
waves <- paste0("Wave_", wls)
tail(waves)
alba <- as.numeric(dta4[1, ][2:2102])
names(alba) <- waves
plot(wls, alba, type = "l", col = "red", lwd = 2,
xlab = "Wavelength (nm)", ylab = "Reflectance")
params <- c(
"N" = 1.4, "Cab" = 40, "Car" = 15,
"Cbrown" = 0.5, "Cw" = 0.002, "Cm" = 0.004
)
invert.options <- default.settings.prospect
invert.options$model
invert.options$n.tries <- 4      # Number of attempts
invert.options$nchains <- 2      # Number of MCMC chains
invert.options$ngibbs <- 10000    # Number of iterations per chain
invert.options$burnin <- 2000    # Length of burnin period
invert.options$do.lsq.first <- TRUE # Initialize with results from a fast least-squares optimization algorithm
names(invert.options)
inversion.alba <- PEcAnRTM::invert.auto(observed = alba,
invert.options = invert.options,
quiet = TRUE)
### Check convergence
par(mfrow = c(2, 1))
plot(inversion.output$samples, auto.layout=FALSE)
par(mfrow = c(1, 1))
### Extract traits
means.alba <- unlist(inversion.alba$results[grep("mu",
names(inversion.alba$results))])[1:5]
means.alba
median.alba <- unlist(inversion.alba$results[grep("med",
names(inversion.alba$results))])[1:5]
median.alba
prospect.sim.alba <- prospect(means.alba, 5)[, 1]  # reflectance
prospect.sim.median.alba <- prospect(median.alba, 5)[, 1]  # reflectance
#### Plot observed and simulated spectra
plot(wl, alba, type = 'l', col = 1, xlab = "wavelength (nm)", ylab = "reflectance")
#### Plot observed and simulated spectra
plot(wls, alba, type = 'l', col = 1, xlab = "wavelength (nm)", ylab = "reflectance")
lines(wls, prospect.sim.alba, type = 'l', col = 2, lwd = 3)
#### Plot observed and simulated spectra
plot(wls, alba, type = 'l', col = 1, lwd = 3,
xlab = "wavelength (nm)", ylab = "reflectance")
lines(wls, prospect.sim.alba, type = 'l', col = 2, lwd = 3)
lines(wls, prospect.sim.median.alba, type = 'l', col = 3, lwd = 3)
legend("topright", c("observed", "predicted1", "predicted2"), lty = 1, col = 1:3)
#### Plot observed and simulated spectra
plot(wls, alba, type = 'l', col = 1, lwd = 3,
xlab = "wavelength (nm)", ylab = "reflectance")
lines(wls, prospect.sim.alba, type = 'l', col = 2, lwd = 3)
lines(wls, prospect.sim.median.alba, type = 'l', col = 3, lwd = 1)
legend("topright", c("observed", "predicted1", "predicted2"), lty = 1, col = 1:3)
save(means.alba, median.alba, inversion.alba,
file = "Data/inversion_alba.rda")
require(PEcAnRTM)
load("~/Documents/GitHub/SpecEvolution/Data/test_alba.RData")
wls <- 400:2500
waves <- paste0("Wave_", wls)
tail(waves)
alba <- as.numeric(dta4[1, ][2:2102])
names(alba) <- waves
load("~/Dropbox/My Mac (Jesús’s MacBook Pro)/Documents/GitHub/SpecEvolution/Data/inversion_alba.rda")
prospect.sim.alba <- prospect(means.alba, 5)[, 1]  # reflectance
prospect.sim.median.alba <- prospect(median.alba, 5)[, 1]  # reflectance
#### Plot observed and simulated spectra
plot(wls, alba, type = 'l', col = 1, lwd = 3,
xlab = "wavelength (nm)", ylab = "reflectance")
lines(wls, prospect.sim.alba, type = 'l', col = 2, lwd = 3)
lines(wls, prospect.sim.median.alba, type = 'l', col = 3, lwd = 1)
#### Plot observed and simulated spectra
plot(wls, alba, type = 'l', col = 1, lwd = 3,
xlab = "wavelength (nm)", ylab = "reflectance")
lines(wls, prospect.sim.alba, type = 'l', col = 2, lwd = 3)
legend("topright", c("observed", "predicted"), lty = 1, col = 1:3)
legend("topright", c("observed", "predicted"), lty = 1, col = 1:3, lwd = 3)
head(inversion.alba$samples)
inversion.alba$results
inversion.alba$samples
inversion.alba$samples[[1]]
inversion.alba$samples[[2]]
inversion.alba$samples[[3]]
ch1 <- inversion.alba$samples[[1]]
ch2 <- inversion.alba$samples[[2]]
ch1 <- data.frame(inversion.alba$samples[[1]])
View(ch1)
hist(ch1$N)
hist(ch1$Cab)
ch2 <- data.frame(inversion.alba$samples[[2]])
hist(ch2$Cab)
ch3 <- rbind(ch1, ch2)
hist(ch3$Cab)
hist(ch3$N)
hist(ch3$Car)
hist(ch3$Cw)
hist(ch3$Cm)
library(tidyverse)
ch3 %>% ggplot(aes(N)) +
geom_histogram()
ch1 %>% ggplot(aes(N)) +
geom_histogram()
ch2 %>% ggplot(aes(N)) +
geom_histogram()
head()
names(ch1)
ch2 %>% ggplot(aes(Cab)) +
geom_histogram()
ch1 %>% ggplot(aes(Cab)) +
geom_histogram()
ch1 %>% ggplot(aes(Car)) +
geom_histogram()
ch2 %>% ggplot(aes(Car)) +
geom_histogram()
ch1 %>% ggplot(aes(Cw)) +
geom_histogram()
ch2 %>% ggplot(aes(Cw)) +
geom_histogram()
ch1 %>% ggplot(aes(Cm)) +
geom_histogram()
ch2 %>% ggplot(aes(Cm)) +
geom_histogram()
ch1 %>% ggplot(aes(residual)) +
geom_histogram()
ch2 %>% ggplot(aes(residual)) +
geom_histogram()
ch3 %>% ggplot(aes(residual)) +
geom_histogram()
ch2 %>% ggplot(aes(Cm)) +
geom_density()
ch2 %>% ggplot(aes(Cm)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
#"N"        "Cab"      "Car"      "Cw"       "Cm"       "residual"
ch2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
ch1 %>% ggplot(aes(Cab)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
ch2 %>% ggplot(aes(Car)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
p1
h2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
ch2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
#"N"        "Cab"      "Car"      "Cw"       "Cm"       "residual"
p1 <- ch2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(1, 1.5) +
theme_classic()
p1
#"N"        "Cab"      "Car"      "Cw"       "Cm"       "residual"
p1 <- ch2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(1.1, 1.5) +
theme_classic()
p1
ch1 %>% ggplot(aes(Cab)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
ch2 %>% ggplot(aes(Car)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
p2 <- ch1 %>% ggplot(aes(Cab)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
#xlim(1.1, 1.5) +
theme_classic()
p3 <- ch2 %>% ggplot(aes(Car)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic()
ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
p4 <- ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0, 0.010) +
theme_classic()
p4
p4 <- ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.025, 0.010) +
theme_classic()
p4
p4 <- ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0, 0.010) +
theme_classic()
p4
p4 <- ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0025, 0.010) +
theme_classic()
p4
ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8)
p5 <- ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0025, 0.010) +
theme_classic()
p5
p5 <- ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0005, 0.010) +
theme_classic()
p5
library(cowplot)
pdf("traits_alba.pdf", height = 10, width = 12)
plot_grid(p1, p2, p3, p4, p5,
ncol = 2, nrow = 3)
dev.off()
p5 <- ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0005, 0.010) +
theme_classic(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p5 <- ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0005, 0.010) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p5
#"N"        "Cab"      "Car"      "Cw"       "Cm"       "residual"
p1 <- ch2 %>% ggplot(aes(N)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(1.1, 1.5) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p1
p2 <- ch1 %>% ggplot(aes(Cab)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
#xlim(1.1, 1.5) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p2
p3 <- ch2 %>% ggplot(aes(Car)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p3
p4 <- ch2 %>% ggplot(aes(Cw)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0025, 0.010) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p4
p5 <- ch2 %>% ggplot(aes(Cm)) +
geom_density(fill = "#69b3a2", color = "#e9ecef", alpha = 0.8) +
xlim(0.0005, 0.010) +
theme_classic() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15))
p5
pdf("traits_alba.pdf", height = 10, width = 12)
plot_grid(p1, p2, p3, p4, p5,
ncol = 2, nrow = 3)
dev.off()
pdf("traits_alba.pdf", height = 10, width = 12)
plot_grid(p1, p2, p3, p4, p5,
ncol = 3, nrow = 3)
dev.off()
pdf("traits_alba.pdf", height = 10, width = 12)
plot_grid(p1, p2, p3, p4, p5,
ncol = 3, nrow = 2)
dev.off()
pdf("traits_alba.pdf", height = 8, width = 12)
plot_grid(p1, p2, p3, p4, p5,
ncol = 3, nrow = 2)
dev.off()
?invert.auto
summary_mvnorm(inversion.alba)
summary_simple(inversion.alba)
params.prospect5b
params.prospect5
names(invert.options)
invert.options <- default.settings.prospect
invert.options$model
names(invert.options)
invert.options$model
params.prospectd
params2edr()
